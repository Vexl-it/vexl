diff --git a/lib/commonjs/index.js b/lib/commonjs/index.js
index 98d7f70fcf1ca8494e5a85cd17b5f2e80630d81a..3e82ae255cae74c6c9760d3c3312a3bf6c07c8f3 100644
--- a/lib/commonjs/index.js
+++ b/lib/commonjs/index.js
@@ -20,10 +20,13 @@ var _keys = require("./keys");
 function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
 function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
 function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
+var FallbackCrypto = require('crypto-browserify');
+
 /**
  * Loosely matches Node.js {crypto} with some unimplemented functionality
  */
 const QuickCrypto = {
+  ...FallbackCrypto,
   createHmac: _Hmac.createHmac,
   Hmac: _Hmac.createHmac,
   Hash: _Hash.createHash,
diff --git a/lib/module/index.js b/lib/module/index.js
index f52cc589a4aef892833ecb2c43a547927c435a3d..7dea711b0f537acf8ce14abb213ed6019d2d57df 100644
--- a/lib/module/index.js
+++ b/lib/module/index.js
@@ -13,11 +13,13 @@ import { subtle } from './subtle';
 import { getCiphers, getHashes } from './Utils';
 import webcrypto from './webcrypto';
 import { createPrivateKey, createPublicKey, createSecretKey } from './keys';
+import FallbackCrypto from 'crypto-browserify';
 
 /**
  * Loosely matches Node.js {crypto} with some unimplemented functionality
  */
 const QuickCrypto = {
+  ...FallbackCrypto,
   createHmac,
   Hmac: createHmac,
   Hash: createHash,
diff --git a/package.json b/package.json
index 3a7e9731574934df879e2a88b6cd2a763fd97d68..f41afe55e69ddaa4db5afc9eedcf307936836f58 100644
--- a/package.json
+++ b/package.json
@@ -67,6 +67,7 @@
     "events": "^3.3.0",
     "readable-stream": "^4.5.2",
     "string_decoder": "^1.3.0",
+    "crypto-browserify": "^3.12.0",
     "util": "^0.12.5"
   },
   "devDependencies": {
diff --git a/src/index.ts b/src/index.ts
index da013594aaadb7cbb094eafec2419fb51953b5c4..459708584059c499360ee0d8e23fcd807310a721 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -21,11 +21,13 @@ import { subtle } from './subtle';
 import { getCiphers, getHashes } from './Utils';
 import webcrypto from './webcrypto';
 import { createPrivateKey, createPublicKey, createSecretKey } from './keys';
+import FallbackCrypto from 'crypto-browserify';
 
 /**
  * Loosely matches Node.js {crypto} with some unimplemented functionality
  */
 const QuickCrypto = {
+  ...FallbackCrypto,
   createHmac,
   Hmac: createHmac,
   Hash: createHash,
